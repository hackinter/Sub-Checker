import requests
import json
import os

class SubChecker:
    def __init__(self, domain):
        self.domain = domain
        self.subdomains = set()
        self.version = "2.1.0"  # ‡¶∏‡¶Ç‡¶∏‡ßç‡¶ï‡¶∞‡¶£ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü

    def find_subdomains(self):
        url = f"https://api.hackertarget.com/hostsearch/?q={self.domain}"
        try:
            response = requests.get(url)

            if response.status_code == 200:
                data = response.text.splitlines()
                for line in data:
                    parts = line.split(',')
                    subdomain = parts[0].strip()
                    if subdomain.endswith(self.domain):
                        self.subdomains.add(subdomain)
                return list(self.subdomains)
            else:
                print("üò± ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø:", response.status_code)
                return []
        except requests.exceptions.RequestException as e:
            print("üö® ‡¶®‡ßá‡¶ü‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶ï ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø:", e)
            return []
        except Exception as e:
            print("üö® ‡¶Ö‡¶ú‡¶æ‡¶®‡¶æ ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø:", e)
            return []

    def display_results(self):
        ascii_art = r"""
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà         ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  
‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà       ‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà      ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà 
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  
     ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà       ‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà      ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà 
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà         ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà 
        """
        os.system('clear')  # ‡¶ü‡¶æ‡¶∞‡ßç‡¶Æ‡¶ø‡¶®‡¶æ‡¶≤ ‡¶™‡¶∞‡¶ø‡¶∑‡ßç‡¶ï‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®
        print(ascii_art)  # ASCII ‡¶∂‡¶ø‡¶≤‡ßç‡¶™ ‡¶™‡ßç‡¶∞‡¶¶‡¶∞‡ßç‡¶∂‡¶®
        print(f"‚ú® ‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶®: {self.version}")  # ‡¶∏‡¶Ç‡¶∏‡ßç‡¶ï‡¶∞‡¶£ ‡¶™‡ßç‡¶∞‡¶¶‡¶∞‡ßç‡¶∂‡¶®
        print("üîç ‡¶∏‡¶æ‡¶¨‡¶°‡ßã‡¶Æ‡ßá‡¶á‡¶®‡¶ó‡ßÅ‡¶≤‡ßã:")
        if self.subdomains:
            for sub in self.subdomains:
                print(f"üåê {sub}")
        else:
            print("üôÖ‚Äç‚ôÇÔ∏è ‡¶ï‡ßã‡¶® ‡¶∏‡¶æ‡¶¨‡¶°‡ßã‡¶Æ‡ßá‡¶á‡¶® ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø‡•§")

    def save_results(self, filename='subdomains.json'):
        try:
            with open(filename, 'w') as file:
                json.dump(list(self.subdomains), file)
            print(f"‚úÖ ‡¶´‡¶≤‡¶æ‡¶´‡¶≤ ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶ø‡¶§ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá: {filename}")
        except Exception as e:
            print("üö® ‡¶´‡¶æ‡¶á‡¶≤ ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£‡ßá‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø:", e)

# ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£
if __name__ == "__main__":
    print("üëã ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ Sub-Checker ‡¶è!")
    domain = input("üîó ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶°‡ßã‡¶Æ‡ßá‡¶® ‡¶¶‡¶ø‡¶® (‡¶Ø‡ßá‡¶Æ‡¶®: example.com): ").strip()  # ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶è‡¶¨‡¶Ç ‡¶ü‡ßç‡¶∞‡¶ø‡¶Æ ‡¶ï‡¶∞‡¶æ
    if not domain:
        print("üö® ‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶¨‡ßà‡¶ß ‡¶°‡ßã‡¶Æ‡ßá‡¶® ‡¶¶‡¶ø‡¶®!")
    else:
        checker = SubChecker(domain)  # ‡¶Ö‡¶¨‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶§‡ßà‡¶∞‡¶ø
        checker.find_subdomains()
        checker.display_results()
        checker.save_results()  # ‡¶´‡¶≤‡¶æ‡¶´‡¶≤ JSON ‡¶´‡¶æ‡¶á‡¶≤‡ßá ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£
